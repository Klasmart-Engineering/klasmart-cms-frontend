{
  "swagger": "2.0",
  "info": {
    "description": "\"KidsLoop 2.0 backend rest api",
    "title": "KidsLoop 2.0 REST API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {},
    "version": "1.0.0"
  },
  "host": "https://kl2-test.kidsloop.net/v1",
  "paths": {
    "/ages": {
      "get": {
        "description": "get age",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "getAge",
        "operationId": "getAge",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.Age"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments": {
      "get": {
        "description": "list assessments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "list assessments",
        "operationId": "listAssessment",
        "parameters": [
          {
            "type": "string",
            "description": "status search",
            "name": "status",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int",
            "default": 10,
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["class_end_time", "-class_end_time", "complete_time", "-complete_time"],
            "type": "string",
            "default": "-class_end_time",
            "description": "list order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.ListAssessmentsResultForHomePage"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add assessments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "add assessments",
        "operationId": "addAssessment",
        "parameters": [
          {
            "description": "add assessment command",
            "name": "assessment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2.ScheduleEndClassCallBackReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.ScheduleEndClassCallBackResp"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments_for_student": {
      "get": {
        "description": "get student assessments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "get student assessments",
        "operationId": "getStudentAssessments",
        "parameters": [
          {
            "enum": ["OfflineClass", "OnlineClass", "OnlineStudy", "OfflineStudy", "home_fun_study", "ReviewStudy"],
            "type": "string",
            "description": "type search, the value of 'home_fun_study' is deprecated,please use 'OfflineStudy' instead",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "enum": ["NotStarted", "InProgress", "Done", "Resubmitted", "Completed"],
            "type": "string",
            "description": "status search",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher id search",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "assessment id search",
            "name": "assessment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "schedule ids search",
            "name": "schedule_ids",
            "in": "query"
          },
          {
            "enum": [
              "create_at",
              "-create_at",
              "in_progress_at",
              "-in_progress_at",
              "done_at",
              "-done_at",
              "resubmitted_at",
              "-resubmitted_at",
              "completed_at",
              "-completed_at"
            ],
            "type": "string",
            "default": "-create_at",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "created_at greater search",
            "name": "created_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "created_at less search",
            "name": "created_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "in_progress_at greater search",
            "name": "in_progress_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "in_progress_at less search",
            "name": "in_progress_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "done_at greater search",
            "name": "done_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "done_at less search",
            "name": "done_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resubmitted_at greater search",
            "name": "resubmitted_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resubmitted_at less search",
            "name": "resubmitted_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "complete_at greater search",
            "name": "completed_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "complete_at less search",
            "name": "completed_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "complete_at greater search (deprecated)",
            "name": "complete_at_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "complete_at less search (deprecated)",
            "name": "complete_at_le",
            "in": "query"
          },
          {
            "type": "string",
            "description": "page search",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "page size search",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.SearchStudentAssessmentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments_summary": {
      "get": {
        "description": "get assessments summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "get assessments summary",
        "operationId": "getAssessmentsSummary",
        "parameters": [
          {
            "type": "string",
            "description": "search status, multiple states are separated by commas,optional value is Started,Draft,Complete",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.AssessmentsSummary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments_v2": {
      "get": {
        "description": "assessments query",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "assessments query",
        "operationId": "queryAssessmentV2",
        "parameters": [
          {
            "type": "string",
            "description": "status search,multiple states are separated by commas,optional value is NotStarted,Started,Draft,Complete",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "query key search",
            "name": "query_key",
            "in": "query"
          },
          {
            "enum": ["TeacherID"],
            "type": "string",
            "description": "query type",
            "name": "query_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "assessment type, value:OnlineClass,OfflineClass,OnlineStudy,ReviewStudy,OfflineStudy",
            "name": "assessment_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int",
            "default": 10,
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["class_end_at", "-class_end_at", "complete_at", "-complete_at", "create_at", "-create_at"],
            "type": "string",
            "default": "-create_at",
            "description": "query order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.AssessmentPageReply"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments_v2/{id}": {
      "get": {
        "description": "get assessment detail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "get assessment detail",
        "operationId": "getAssessmentDetailV2",
        "parameters": [
          {
            "type": "string",
            "description": "assessment id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v2.AssessmentDetailReply"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update assessment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "operationId": "updateAssessmentV2",
        "parameters": [
          {
            "type": "string",
            "description": "assessment id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "update assessment args",
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2.AssessmentUpdateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk/learning_outcomes": {
      "delete": {
        "description": "bulk delete learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk delete learning outcome",
        "operationId": "deleteOutcomeBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_approve/learning_outcomes": {
      "put": {
        "description": "approve learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk approve learning outcome",
        "operationId": "approveLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_approve/milestones": {
      "put": {
        "description": "bulk approve milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "bulk approve milestone",
        "operationId": "bulkApproveMilestone",
        "parameters": [
          {
            "description": "milestone id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.MilestoneList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_publish/learning_outcomes": {
      "put": {
        "description": "submit publish learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "publish bulk learning outcome",
        "operationId": "publishLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_publish/milestones": {
      "put": {
        "description": "submit publish milestones",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "publish bulk milestone",
        "operationId": "publishMilestonesBulk",
        "parameters": [
          {
            "description": "milestone id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.MilestoneList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_reject/learning_outcomes": {
      "put": {
        "description": "reject learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk reject learning outcome",
        "operationId": "rejectLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "bulk_reject_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeBulkRejectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_reject/milestones": {
      "put": {
        "description": "bulk reject milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "bulk reject milestone",
        "operationId": "bulkRejectMilestone",
        "parameters": [
          {
            "description": "milestone id list",
            "name": "bulk_reject_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.MilestoneBulkRejectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/classes_members": {
      "post": {
        "description": "add members to class",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["classAddMembersEvent"],
        "summary": "classAddMembersEvent",
        "operationId": "classAddMembersEvent",
        "parameters": [
          {
            "description": "add member to class event",
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassEventBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "class delete members",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["classDeleteMembersEvent"],
        "summary": "classDeleteMembersEvent",
        "operationId": "classDeleteMembersEvent",
        "parameters": [
          {
            "description": "delete members to class event",
            "name": "event",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassEventBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents": {
      "get": {
        "description": "query content by condition (Inherent \u0026 unchangeable)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryContent",
        "operationId": "searchContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content path",
            "name": "path",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "create lesson plan, lesson material or assets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "createContent",
        "operationId": "createContent",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}": {
      "get": {
        "description": "get a content by id (Inherent \u0026 unchangeable)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContent",
        "operationId": "getContentById",
        "parameters": [
          {
            "type": "string",
            "description": "get content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update a content data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "updateContent",
        "operationId": "updateContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content data to update",
            "name": "contentData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a content",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "deleteContent",
        "operationId": "deleteContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to delete",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/live/token": {
      "get": {
        "description": "get content live token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentLiveToken",
        "operationId": "getContentLiveToken",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LiveTokenView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/lock": {
      "put": {
        "description": "lock a content to edit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "lockContent",
        "operationId": "lockContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to lock",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/publish": {
      "put": {
        "description": "publish a content",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContent",
        "operationId": "publishContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content publish data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.PublishContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/publish/assets": {
      "put": {
        "description": "publish a content with assets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContentWithAssets",
        "operationId": "publishContentWithAssets",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content publish data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.PublishContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/review/approve": {
      "put": {
        "description": "approve content by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "approve content",
        "operationId": "approveContentReview",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/review/reject": {
      "put": {
        "description": "reject content by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "reject content",
        "operationId": "rejectContentReview",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/statistics": {
      "get": {
        "description": "get content data count",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "contentDataCount",
        "operationId": "getContentsStatistics",
        "parameters": [
          {
            "type": "string",
            "description": "content id to get count",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentStatisticsInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_authed": {
      "get": {
        "description": "query authed content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "querySharedContent",
        "operationId": "querySharedContent",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_bulk": {
      "delete": {
        "description": "delete contents bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "deleteContentBulk",
        "operationId": "deleteContentBulk",
        "parameters": [
          {
            "description": "content bulk id list",
            "name": "contentIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.contentBulkOperateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_bulk/publish": {
      "put": {
        "description": "publish contents bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContentBulk",
        "operationId": "publishContentBulk",
        "parameters": [
          {
            "description": "content bulk id list",
            "name": "contentIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.contentBulkOperateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_folders": {
      "get": {
        "description": "query content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryFolderContent",
        "operationId": "queryFolderContent",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content path",
            "name": "path",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_lesson_plans": {
      "post": {
        "description": "get lesson plans for schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getLessonPlansCanSchedule",
        "operationId": "getLessonPlansCanSchedule",
        "parameters": [
          {
            "type": "integer",
            "description": "page",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page",
            "in": "query"
          },
          {
            "description": "request args",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ContentConditionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetLessonPlansCanScheduleResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_pending": {
      "get": {
        "description": "query pending content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryPendingContent",
        "operationId": "searchPendingContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_private": {
      "get": {
        "description": "query private content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryPrivateContent",
        "operationId": "searchPrivateContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources": {
      "get": {
        "description": "get path to upload resource",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentResourceUploadPath",
        "operationId": "getContentResourceUploadPath",
        "parameters": [
          {
            "type": "string",
            "description": "Resource partition",
            "name": "partition",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Resource extension",
            "name": "extension",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources/{resource_id}": {
      "get": {
        "description": "get the path of a resource",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentResourcePath",
        "operationId": "getContentResourcePath",
        "parameters": [
          {
            "type": "string",
            "description": "Resource id",
            "name": "resource_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources/{resource_id}/check": {
      "get": {
        "description": "check resource exist",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "checkResourceExist",
        "operationId": "checkResourceExist",
        "parameters": [
          {
            "type": "string",
            "description": "Resource id",
            "name": "resource_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "true/false",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources/{resource_id}/download": {
      "get": {
        "description": "get the path of a resource url",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getDownloadPath",
        "operationId": "getDownloadPath",
        "parameters": [
          {
            "type": "string",
            "description": "Resource id",
            "name": "resource_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.DownloadPathResource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_review/approve": {
      "put": {
        "description": "approve content bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "approve content bulk",
        "operationId": "approveContentReviewBulk",
        "parameters": [
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_review/reject": {
      "put": {
        "description": "reject content bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "reject content bulk",
        "operationId": "rejectContentReviewBulk",
        "parameters": [
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_shared": {
      "get": {
        "description": "query shared content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "querySharedContentV2",
        "operationId": "querySharedContentV2",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content name",
            "name": "content_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search page sub menu",
            "name": "submenu",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "parent_id",
            "name": "parent_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QuerySharedContentV2Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/crypto/h5p/jwt": {
      "get": {
        "description": "generate JWT for h5p",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["crypto"],
        "summary": "generateH5pJWT",
        "operationId": "generateH5pJWT",
        "parameters": [
          {
            "type": "string",
            "description": "subject for jwt",
            "name": "sub",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content id to operate",
            "name": "content_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.TokenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/crypto/h5p/signature": {
      "get": {
        "description": "signature url for h5p",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["crypto"],
        "summary": "h5pSignature",
        "operationId": "h5pSignature",
        "parameters": [
          {
            "type": "string",
            "description": "url to signature",
            "name": "url",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SignatureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/developmentals": {
      "get": {
        "description": "get developmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "getDevelopmental",
        "operationId": "getDevelopmental",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject ids,separated by comma",
            "name": "subject_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.Category"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "description": "create folder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "createFolder",
        "operationId": "createFolder",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateFolderResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items": {
      "delete": {
        "description": "remove folder items bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "removeFolderItemBulk",
        "operationId": "removeFolderItemBulk",
        "parameters": [
          {
            "description": "remove folder ids",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.RemoveItemBulk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/bulk/move": {
      "put": {
        "description": "bulk move folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "moveFolderItemBulk",
        "operationId": "moveFolderItemBulk",
        "parameters": [
          {
            "description": "move folder item buck request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.MoveFolderIDBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/details/{item_id}": {
      "get": {
        "description": "get a folder item by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "getFolderItemByID",
        "operationId": "getFolderItemByID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderItemInfo"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update folder item info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "updateFolderItem",
        "operationId": "updateFolderItem",
        "parameters": [
          {
            "type": "string",
            "description": "folder item id to delete",
            "name": "item_id",
            "in": "path",
            "required": true
          },
          {
            "description": "update request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UpdateFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/list/{item_id}": {
      "get": {
        "description": "list folder items (deprecated)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "listFolderItems",
        "operationId": "listFolderItems",
        "parameters": [
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/move": {
      "put": {
        "description": "move folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "moveFolderItem",
        "operationId": "moveFolderItem",
        "parameters": [
          {
            "description": "move folder request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.MoveFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/search/org": {
      "get": {
        "description": "search folder items in org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "searchOrgFolderItems",
        "operationId": "searchOrgFolderItems",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items owner type. 1.org folder 2.private folder",
            "name": "owner_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items type. [assets, plans and materials]",
            "name": "partition",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items from parent",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items in path",
            "name": "path",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponseWithTotal"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/search/private": {
      "get": {
        "description": "search user's private folder items",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "searchPrivateFolderItems",
        "operationId": "searchPrivateFolderItems",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items owner type. 1.org folder 2.private folder",
            "name": "owner_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items type. [assets, plans and materials]",
            "name": "partition",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items from parent",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items in path",
            "name": "path",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponseWithTotal"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/{item_id}": {
      "delete": {
        "description": "remove folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "removeFolderItem",
        "operationId": "removeFolderItem",
        "parameters": [
          {
            "type": "string",
            "description": "folder item id to delete",
            "name": "item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/share": {
      "get": {
        "description": "get folders shared records",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "getFoldersSharedRecords",
        "operationId": "getFoldersSharedRecords",
        "parameters": [
          {
            "type": "string",
            "description": "folder id list, split by ','",
            "name": "folder_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderShareRecords"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "share folders to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "shareFolders",
        "operationId": "shareFolders",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ShareFoldersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/tree": {
      "get": {
        "description": "get tree",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "getTree",
        "operationId": "getTree",
        "parameters": [
          {
            "type": "string",
            "description": "search content key",
            "name": "key",
            "in": "query"
          },
          {
            "enum": ["all", "name"],
            "type": "string",
            "description": "search key type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "enum": ["me", "all"],
            "type": "string",
            "description": "search role",
            "name": "role",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TreeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/grades": {
      "get": {
        "description": "get grade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "getGrade",
        "operationId": "getGrade",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.Grade"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/internal/contents": {
      "get": {
        "description": "query content internal",
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryContentInternal",
        "operationId": "queryContentInternal",
        "parameters": [
          {
            "type": "string",
            "description": "search content under the organization",
            "name": "org_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content id list, separated by commas",
            "name": "content_ids",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search content type, 1 for materials \u0026 2 for plans",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search content create_at less",
            "name": "create_at_le",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search content create_at greater",
            "name": "create_at_ge",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search materials from lesson_plan",
            "name": "plan_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search student content map under the schedule review",
            "name": "schedule_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content by source id",
            "name": "source_id",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentSimplifiedList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/internal/schedule_counts": {
      "get": {
        "description": "get schedule attendance",
        "produces": ["application/json"],
        "tags": ["internal"],
        "summary": "getScheduleAttendance",
        "operationId": "getScheduleAttendance",
        "parameters": [
          {
            "enum": ["live", "class", "study", "home_fun_study", "task"],
            "type": "string",
            "description": "search schedule by schedule type, separated by commas",
            "name": "schedule_types",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedule by start_at, the time interval should not exceed 2 hours",
            "name": "timeframe_from",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedule by end_at, the time interval should not exceed 2 hours",
            "name": "timeframe_to",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleAttendance"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/internal/schedules": {
      "get": {
        "description": "query schedule internal",
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "queryScheduleInternal",
        "operationId": "queryScheduleInternal",
        "parameters": [
          {
            "type": "string",
            "description": "search schedule id list, separated by commas",
            "name": "schedule_ids",
            "in": "query"
          },
          {
            "enum": ["create_at", "-create_at", "start_at", "-start_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page index, not paging if page \u003c=0",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "records per page, not paging if page_size \u003c= 0",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleSimplifiedPageView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/internal/schedules/update_review_status": {
      "post": {
        "description": "update review schedule status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["internal"],
        "summary": "updateScheduleReviewStatus",
        "operationId": "updateScheduleReviewStatus",
        "parameters": [
          {
            "description": "schedule review create result",
            "name": "queryData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UpdateScheduleReviewStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/internal/schedules/{schedule_id}/relation_ids": {
      "get": {
        "description": "query schedule relation ids internal",
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "queryScheduleRelationIDInternal",
        "operationId": "queryScheduleRelationIDInternal",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleRelationIDs"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes": {
      "get": {
        "description": "search learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search learning outcome",
        "operationId": "searchLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by set_name",
            "name": "set_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchOutcomeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "createLearningOutcome",
        "operationId": "createLearningOutcomes",
        "parameters": [
          {
            "description": "outcome condition",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeCreateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.OutcomeCreateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/export": {
      "post": {
        "description": "export learning outcome",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "export learning outcome",
        "operationId": "exportLearningOutcomes",
        "parameters": [
          {
            "description": "export outcome condition",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ExportOutcomeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ExportOutcomeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}": {
      "get": {
        "description": "learning outcomes info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "getLearningOutcome",
        "operationId": "getLearningOutcomesById",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.OutcomeDetailView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update learning outcomes by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "update learning outcome",
        "operationId": "updateLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "learning outcome",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeCreateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete learning outcomes by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "delete learning outcome",
        "operationId": "deleteLearningOutcome",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/approve": {
      "put": {
        "description": "approve learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "approve learning outcome",
        "operationId": "approveLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/lock": {
      "put": {
        "description": "edit published learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "lock learning outcome",
        "operationId": "lockLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/publish": {
      "put": {
        "description": "submit publish learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "publish learning outcome",
        "operationId": "publishLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "publish scope",
            "name": "PublishOutcomeRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/model.PublishOutcomeReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/reject": {
      "put": {
        "description": "reject learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "reject learning outcome",
        "operationId": "rejectLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "reject reason",
            "name": "OutcomeRejectReq",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeRejectReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/lesson_types": {
      "get": {
        "description": "get lessonType",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["lessonType"],
        "summary": "getLessonType",
        "operationId": "getLessonType",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.LessonType"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/lesson_types/{id}": {
      "get": {
        "description": "get lessonType by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["lessonType"],
        "summary": "getLessonTypeByID",
        "operationId": "getLessonTypeByID",
        "parameters": [
          {
            "type": "string",
            "description": "lessonType id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LessonType"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/milestones": {
      "get": {
        "description": "search milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "search milestone",
        "operationId": "searchMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author",
            "name": "author_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchMilestoneResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "create milestone",
        "operationId": "createMilestone",
        "parameters": [
          {
            "description": "create milestone",
            "name": "milestone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.CreateMilestoneView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.MilestoneView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "delete milestone",
        "operationId": "deleteMilestone",
        "parameters": [
          {
            "description": "delete milestone",
            "name": "milestones",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.MilestoneList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/milestones/{milestone_id}": {
      "get": {
        "description": "milestone info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "get milestone by id",
        "operationId": "obtainMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "milestone id",
            "name": "milestone_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.MilestoneDetailView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update milestone info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "update milestone",
        "operationId": "updateMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "milestone id",
            "name": "milestone_id",
            "in": "path",
            "required": true
          },
          {
            "description": "milestone",
            "name": "milestone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.CreateMilestoneView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/milestones/{milestone_id}/occupy": {
      "put": {
        "description": "occupy before edit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "lock milestone",
        "operationId": "occupyMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "milestone id",
            "name": "milestone_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/organization_permissions": {
      "post": {
        "description": "has organization permission",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["permission"],
        "summary": "hasOrganizationPermissions",
        "operationId": "hasOrganizationPermissions",
        "parameters": [
          {
            "description": "permission names",
            "name": "PermissionNames",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.HasPermissionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.HasPermissionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/organizations_propertys/{id}": {
      "get": {
        "description": "get organization property by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["organizationProperty"],
        "summary": "getOrganizationPropertyByID",
        "operationId": "getOrganizationPropertyByID",
        "parameters": [
          {
            "type": "string",
            "description": "organization id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.OrganizationProperty"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/organizations_region": {
      "get": {
        "description": "get organization region by user org",
        "tags": ["organizationProperty"],
        "summary": "getOrganizationByHeadquarterForDetails",
        "operationId": "getOrganizationByHeadquarterForDetails",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OrganizationRegionInfoResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/pending_learning_outcomes": {
      "get": {
        "description": "search pending learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search pending learning outcome",
        "operationId": "searchPendingLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchOutcomeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/pending_milestones": {
      "get": {
        "description": "search pending milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "search pending milestone",
        "operationId": "searchPendingMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author",
            "name": "author_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchMilestoneResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "description": "Ping and test service",
        "consumes": ["application/json"],
        "produces": ["text/plain"],
        "tags": ["common"],
        "summary": "Ping",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/private_learning_outcomes": {
      "get": {
        "description": "search private learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search private learning outcome",
        "operationId": "searchPrivateLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchOutcomeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/private_milestones": {
      "get": {
        "description": "search private milestone",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["milestone"],
        "summary": "search private milestone",
        "operationId": "searchPrivateMilestone",
        "parameters": [
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author",
            "name": "author_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchMilestoneResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs": {
      "get": {
        "description": "get program",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "getProgram",
        "operationId": "getProgram",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.Program"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs_groups": {
      "get": {
        "description": "get program groups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "getProgramGroup",
        "operationId": "getProgramGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/published_learning_outcomes": {
      "post": {
        "description": "search published learning outcome with outcome sets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search published learning outcome",
        "operationId": "searchPublishedLearningOutcomes",
        "parameters": [
          {
            "description": "create outcome",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.OutcomeCondition"
            }
          },
          {
            "description": "page size: -1 no page, 0 default page size 20",
            "name": "page_size",
            "in": "body",
            "schema": {
              "type": "integer"
            }
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "description": "order by",
            "name": "order_by",
            "in": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.SearchPublishedOutcomeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learner_monthly_overview": {
      "get": {
        "description": "get learner monthly report overview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get learner monthly report overview",
        "operationId": "getLearnerMonthlyReportOverview",
        "parameters": [
          {
            "type": "string",
            "description": "time_range",
            "name": "time_range",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LearnerReportOverview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learner_usage/overview": {
      "post": {
        "description": "get learner usage Report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learnerUsage"],
        "summary": "get learner usage Report",
        "operationId": "getLearnerUsageOverview",
        "parameters": [
          {
            "description": "classAssignments",
            "name": "classes_assignments",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.LearnerUsageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LearnerUsageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learner_weekly_overview": {
      "get": {
        "description": "get learner weekly report overview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get learner weekly report overview",
        "operationId": "getLearnerWeeklyReportOverview",
        "parameters": [
          {
            "type": "string",
            "description": "time_range",
            "name": "time_range",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LearnerReportOverview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/assignments": {
      "get": {
        "description": "query live classes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query live classes summary",
        "operationId": "queryAssignmentsSummary",
        "parameters": [
          {
            "type": "integer",
            "description": "year",
            "name": "year",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week start timestamp(unit: second)",
            "name": "week_start",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week end timestamp(unit: second)",
            "name": "week_end",
            "in": "query"
          },
          {
            "type": "string",
            "description": "school id",
            "name": "school_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject_id",
            "name": "subject_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryAssignmentsSummaryResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/assignments_v2": {
      "get": {
        "description": "query live classes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query live classes summary",
        "operationId": "queryAssignmentsSummaryV2",
        "parameters": [
          {
            "type": "integer",
            "description": "year",
            "name": "year",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week start timestamp(unit: second)",
            "name": "week_start",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week end timestamp(unit: second)",
            "name": "week_end",
            "in": "query"
          },
          {
            "type": "string",
            "description": "school id",
            "name": "school_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject_id",
            "name": "subject_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryAssignmentsSummaryResultV2"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/live_classes": {
      "get": {
        "description": "query live classes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query live classes summary",
        "operationId": "queryLiveClassesSummary",
        "parameters": [
          {
            "type": "integer",
            "description": "year",
            "name": "year",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week start timestamp(unit: second)",
            "name": "week_start",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week end timestamp(unit: second)",
            "name": "week_end",
            "in": "query"
          },
          {
            "type": "string",
            "description": "school id",
            "name": "school_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject_id",
            "name": "subject_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryLiveClassesSummaryResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/live_classes_v2": {
      "get": {
        "description": "query live classes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query live classes summary",
        "operationId": "queryLiveClassesSummaryV2",
        "parameters": [
          {
            "type": "integer",
            "description": "year",
            "name": "year",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week start timestamp(unit: second)",
            "name": "week_start",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "week end timestamp(unit: second)",
            "name": "week_end",
            "in": "query"
          },
          {
            "type": "string",
            "description": "school id",
            "name": "school_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject_id",
            "name": "subject_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.QueryLiveClassesSummaryResultV2"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/outcomes": {
      "get": {
        "description": "query outcomes for  live classes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query outcomes for  live classes summary",
        "operationId": "queryOutcomesByAssessmentID",
        "parameters": [
          {
            "type": "string",
            "description": "assessment_id",
            "name": "assessment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.LearningSummaryOutcome"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/learning_summary/time_filter": {
      "get": {
        "description": "query learning summary time filter",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/learningSummary"],
        "summary": "query learning summary time filter",
        "operationId": "queryLearningSummaryTimeFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "time offset (unit: second)",
            "name": "time_offset",
            "in": "query",
            "required": true
          },
          {
            "enum": ["live_class", "assignment"],
            "type": "string",
            "description": "learning summary type",
            "name": "summary_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "school ids, use commas to separate",
            "name": "school_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.LearningSummaryFilterYear"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/students": {
      "get": {
        "description": "list student performance report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student performance report",
        "operationId": "listStudentsPerformanceReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ListStudentsPerformanceReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/students/{id}": {
      "get": {
        "description": "get student performance report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get student performance report",
        "operationId": "getStudentPerformanceReport",
        "parameters": [
          {
            "type": "string",
            "description": "student id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetStudentPerformanceReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_progress/app/insight_message": {
      "get": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentProgress"],
        "summary": "getAppInsightMessage",
        "operationId": "getAppInsightMessage",
        "parameters": [
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "student_id",
            "name": "student_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "org_id",
            "name": "org_id",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 0,
            "description": "end_time",
            "name": "end_time",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AppInsightMessageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_progress/assignment_completion": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentProgress"],
        "summary": "getAssignmentsCompletion",
        "operationId": "getAssignmentsCompletion",
        "parameters": [
          {
            "description": "request ",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.AssignmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_progress/class_attendance": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentProgress"],
        "summary": "getClassAttendance",
        "operationId": "getClassAttendance",
        "parameters": [
          {
            "description": "request ",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassAttendanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ClassAttendanceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_progress/learn_outcome_achievement": {
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentProgress"],
        "summary": "getLearnOutcomeAchievement",
        "operationId": "getLearnOutcomeAchievement",
        "parameters": [
          {
            "description": "request ",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.LearnOutcomeAchievementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LearnOutcomeAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/class_registration": {
      "get": {
        "description": "get student usage of class registration report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get student usage of class registration report",
        "operationId": "getStudentUsageClassRegistrationReport",
        "parameters": [
          {
            "type": "string",
            "description": "organization id",
            "name": "organization_id",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "class id list",
            "name": "class_id_list",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "time range list",
            "name": "time_range_list",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.StudentUsageRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/classes_assignments": {
      "post": {
        "description": "get Classes\u0026Assignments Report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get Classes\u0026Assignments Report",
        "operationId": "getClassesAssignments",
        "parameters": [
          {
            "description": "classAssignments",
            "name": "classes_assignments",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassesAssignmentsViewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ClassesAssignmentsView"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/classes_assignments/{class_id}/unattended": {
      "post": {
        "description": "get Classes\u0026Assignments unattended",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get Classes\u0026Assignments Report",
        "operationId": "getClassesAssignmentsUnattended",
        "parameters": [
          {
            "description": "unattended",
            "name": "unattended",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassesAssignmentsUnattendedViewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ClassesAssignmentsUnattendedStudentsView"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/classes_assignments_overview": {
      "post": {
        "description": "get Classes\u0026Assignments overview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get Classes\u0026Assignments Report",
        "operationId": "getClassesAssignmentsOverview",
        "parameters": [
          {
            "description": "overview",
            "name": "overview",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ClassesAssignmentOverViewRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ClassesAssignmentOverView"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/material": {
      "post": {
        "description": "get student usage of material report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get student usage of material report",
        "operationId": "getStudentUsageMaterialReport",
        "parameters": [
          {
            "description": "request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.StudentUsageMaterialReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentUsageMaterialReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/material_view_count": {
      "post": {
        "description": "get student usage of material report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get student usage of material report",
        "operationId": "getStudentUsageMaterialViewCountReport",
        "parameters": [
          {
            "description": "request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.StudentUsageMaterialViewCountReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentUsageMaterialViewCountReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/student_usage/organization_registration": {
      "get": {
        "description": "get student usage of organization registration report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/studentUsage"],
        "summary": "get student usage of organization registration report",
        "operationId": "getStudentUsageOrganizationRegistrationReport",
        "parameters": [
          {
            "type": "string",
            "description": "organization id",
            "name": "organization_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentUsageRegistration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/students": {
      "get": {
        "description": "list student report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student report",
        "operationId": "listStudentsAchievementReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          },
          {
            "enum": ["all", "achieved", "not_achieved", "not_attempted"],
            "type": "string",
            "default": "all",
            "description": "status",
            "name": "status",
            "in": "query"
          },
          {
            "enum": ["desc", "asc"],
            "type": "string",
            "default": "desc",
            "description": "sort by",
            "name": "sort_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentsAchievementReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/students/{id}": {
      "get": {
        "description": "get student report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get student report",
        "operationId": "getStudentAchievementReport",
        "parameters": [
          {
            "type": "string",
            "description": "student id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentAchievementReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/students_achievement_overview": {
      "get": {
        "description": "list student report overview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student report overview",
        "operationId": "getLearningOutcomeOverView",
        "parameters": [
          {
            "type": "string",
            "description": "time_range",
            "name": "time_range",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentsAchievementOverviewReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teacher_load/assignments": {
      "post": {
        "description": "list teaching load report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/teacherLoad"],
        "summary": "list teaching load report",
        "operationId": "getTeacherLoadReportOfAssignment",
        "parameters": [
          {
            "description": "request ",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadAssignmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.TeacherLoadAssignmentResponseItem"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teacher_load/lessons_list": {
      "post": {
        "description": "teacher load list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/teacherLoad"],
        "summary": "get teacher load Report",
        "operationId": "listTeacherLoadLessons",
        "parameters": [
          {
            "description": "request",
            "name": "overview",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadLessonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.TeacherLoadLesson"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teacher_load/lessons_summary": {
      "post": {
        "description": "teacher load summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/teacherLoad"],
        "summary": "get teacher load Report",
        "operationId": "summaryTeacherLoadLessons",
        "parameters": [
          {
            "description": "request",
            "name": "overview",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadLessonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadLessonSummary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teacher_load/missed_lessons": {
      "post": {
        "description": "teacher missed lessons",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/teacherLoad"],
        "summary": "get teacher missed lessons",
        "operationId": "listTeacherMissedLessons",
        "parameters": [
          {
            "description": "request",
            "name": "overview",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadMissedLessonsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadMissedLessonsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teacher_load_overview": {
      "get": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports/teacherLoad"],
        "summary": "get teacher load overview",
        "operationId": "getTeacherLoadOverview",
        "parameters": [
          {
            "type": "string",
            "description": "time_range",
            "name": "time_range",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherLoadOverview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teachers": {
      "get": {
        "description": "get teacher sreport",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get teachers report",
        "operationId": "getTeachersReport",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherReport"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teachers/{id}": {
      "get": {
        "description": "get teacher report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get teacher report",
        "operationId": "getTeacherReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherReport"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teaching_loading": {
      "post": {
        "description": "list teaching load report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list teaching load report",
        "operationId": "listTeachingLoadReport",
        "parameters": [
          {
            "description": "query teaching load",
            "name": "teaching_load",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ReportListTeachingLoadArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ReportListTeachingLoadResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "description": "query schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "querySchedule",
        "operationId": "querySchedule",
        "parameters": [
          {
            "type": "string",
            "description": "teacher name",
            "name": "teacher_name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by start_at",
            "name": "start_at",
            "in": "query"
          },
          {
            "enum": ["create_at", "-create_at", "start_at", "-start_at", "schedule_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page index, not paging if page \u003c=0",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "records per page, not paging if page_size \u003c= 0",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.SchedulePageView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "addSchedule",
        "operationId": "addSchedule",
        "parameters": [
          {
            "description": "schedule data to add",
            "name": "scheduleData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleAddView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/review/check_data": {
      "post": {
        "description": "check schedule review data before create",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "checkScheduleReviewData",
        "operationId": "checkScheduleReviewData",
        "parameters": [
          {
            "description": "schedule review data to check",
            "name": "queryData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CheckScheduleReviewDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.CheckScheduleReviewDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}": {
      "get": {
        "description": "get schedule by id, excluding deleted",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleByID",
        "operationId": "getScheduleByID",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleDetailsView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "updateSchedule",
        "operationId": "updateSchedule",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "description": "schedule data to update",
            "name": "scheduleData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleUpdateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "deleteSchedule",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["only_current", "with_following"],
            "type": "string",
            "description": "repeat edit options",
            "name": "repeat_edit_options",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/contents": {
      "get": {
        "description": "get schedule live lesson plan by schedule id, if no one attempted live, return latest version content",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleLiveLessonPlan",
        "operationId": "getScheduleLiveLessonPlan",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/live/token": {
      "get": {
        "description": "get schedule live token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleLiveToken",
        "operationId": "getScheduleLiveToken",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["preview", "live"],
            "type": "string",
            "description": "live token type",
            "name": "live_token_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LiveTokenView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/operator/newest_feedback": {
      "get": {
        "description": "get schedule newest feedback by operator",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleNewestFeedbackByOperator",
        "operationId": "getScheduleNewestFeedbackByOperator",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleFeedbackView"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/show_option": {
      "put": {
        "description": "update schedule show option",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "updateScheduleShowOption",
        "operationId": "updateScheduleShowOption",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["hidden", "visible"],
            "type": "string",
            "description": "hidden properties",
            "name": "show_option",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/status": {
      "put": {
        "description": "update schedule status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "updateStatus",
        "operationId": "updateStatus",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["NotStart", "Started", "Closed"],
            "type": "string",
            "description": "schedule status",
            "name": "status",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_feedbacks": {
      "get": {
        "description": "query feedback list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["scheduleFeedback"],
        "summary": "queryFeedback",
        "operationId": "queryFeedback",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user id",
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleFeedbackView"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add ScheduleFeedback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["scheduleFeedback"],
        "summary": "addScheduleFeedback",
        "operationId": "addScheduleFeedback",
        "parameters": [
          {
            "description": "feedback data",
            "name": "feedback",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleFeedbackAddInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_filter/programs": {
      "get": {
        "description": "get schedule filter programs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "get schedule filter programs",
        "operationId": "getProgramsInScheduleFilter",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleShortInfo"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_filter/subjects": {
      "get": {
        "description": "get schedule filter subjects",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "get schedule filter subjects",
        "operationId": "getSubjectsInScheduleFilter",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleShortInfo"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_lesson_plans": {
      "get": {
        "description": "get lessonPlans by teacher and class",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "get lessonPlans by teacher and class",
        "operationId": "getLessonPlans",
        "parameters": [
          {
            "type": "string",
            "description": "teacher id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleShortInfo"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_time_view": {
      "get": {
        "description": "get schedule time view",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleTimeView",
        "operationId": "getScheduleTimeView",
        "parameters": [
          {
            "enum": ["day", "work_week", "week", "month", "year", "full_view"],
            "type": "string",
            "description": "search schedules by view_type",
            "name": "view_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by time_at",
            "name": "time_at",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "school id,separated by comma",
            "name": "school_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher id,separated by comma",
            "name": "teacher_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user id,separated by comma",
            "name": "user_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id,separated by comma,special classes id is 'Undefined',this class members only under org",
            "name": "class_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject id,separated by comma",
            "name": "subject_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "program id,separated by comma",
            "name": "program_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class type,separated by comma",
            "name": "class_types",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "get schedules equal to due_at",
            "name": "due_at_eq",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "get schedules greater than or equal to start_at",
            "name": "start_at_ge",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "get schedules less than or equal to end_at",
            "name": "end_at_le",
            "in": "query"
          },
          {
            "enum": ["any_time", "only_mine"],
            "type": "string",
            "description": "get schedules by filter option",
            "name": "filter_option",
            "in": "query"
          },
          {
            "enum": ["create_at", "-create_at", "start_at", "-start_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleListView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "post schedule time view",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "postScheduleTimeView",
        "operationId": "postScheduleTimeView",
        "parameters": [
          {
            "description": "schedule data to query",
            "name": "queryData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleTimeViewQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleListView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_time_view/dates": {
      "get": {
        "description": "get schedules dates(format:2006-01-02)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduledDates",
        "operationId": "getScheduledDates",
        "parameters": [
          {
            "enum": ["day", "work_week", "week", "month", "year"],
            "type": "string",
            "description": "search schedules by view_type",
            "name": "view_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by time_at",
            "name": "time_at",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "school ids,separated by comma",
            "name": "school_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher id,separated by comma",
            "name": "teacher_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id,separated by comma",
            "name": "class_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject id,separated by comma",
            "name": "subject_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "program id,separated by comma",
            "name": "program_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "get schedules dates(format:2006-01-02)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "postScheduledDates",
        "operationId": "postScheduledDates",
        "parameters": [
          {
            "description": "schedule data to query",
            "name": "queryData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleTimeViewQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_time_view/list": {
      "post": {
        "description": "get schedule time view list without relation info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleTimeViewList",
        "operationId": "getScheduleTimeViewList",
        "parameters": [
          {
            "description": "schedule time view data to query",
            "name": "queryData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleTimeViewListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleTimeViewListResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_view/{schedule_id}": {
      "get": {
        "description": "get schedule popup info by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getSchedulePopupByID",
        "operationId": "getSchedulePopupByID",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleViewDetail"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/sets": {
      "get": {
        "description": "outcome_set info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["outcome_set"],
        "summary": "getOutcomeSet",
        "operationId": "pullOutcomeSet",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "set_name",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.PullOutcomeSetResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create learning outcome sets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["outcome_set"],
        "summary": "createOutcomeSet",
        "operationId": "createOutcomeSet",
        "parameters": [
          {
            "description": "create outcome set",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/model.OutcomeSetCreateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/model.OutcomeSetCreateView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/sets/bulk_bind": {
      "post": {
        "description": "bulk bind learning outcome",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["outcome_set"],
        "summary": "bind learning outcome set",
        "operationId": "bulkBindOutcomeSet",
        "parameters": [
          {
            "description": "learning outcome",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.BulkBindOutcomeSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/shortcode": {
      "post": {
        "description": "generate shortcode",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["shortcode"],
        "summary": "generate Shortcode",
        "operationId": "generateShortcode",
        "parameters": [
          {
            "description": "learning outcome",
            "name": "kind",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/api.ShortcodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.ShortcodeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/skills": {
      "get": {
        "description": "get skill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "getSkill",
        "operationId": "getSkill",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "developmental id",
            "name": "developmental_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.SubCategory"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/student_usage_record/event": {
      "post": {
        "description": "student usage record",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["usageRecord"],
        "summary": "student usage record",
        "operationId": "studentUsageRecord",
        "parameters": [
          {
            "description": "record usage",
            "name": "milestone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.JwtToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/subjects": {
      "get": {
        "description": "get subjects",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "getSubject",
        "operationId": "getSubject",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external.Subject"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/user_settings": {
      "get": {
        "description": "get user setting by user id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["userSetting"],
        "summary": "getUserSettingByOperator",
        "operationId": "getUserSettingByOperator",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.UserSettingJsonContent"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "set user setting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["userSetting"],
        "summary": "setUserSetting",
        "operationId": "setUserSetting",
        "parameters": [
          {
            "description": "user setting json content",
            "name": "userSetting",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UserSettingJsonContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/check_account": {
      "get": {
        "description": "check account register",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "checkAccount",
        "operationId": "checkAccount",
        "parameters": [
          {
            "type": "string",
            "description": "account",
            "name": "account",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CheckAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "409": {
            "description": ""
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/forgotten_pwd": {
      "post": {
        "description": "forget password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "forget password",
        "operationId": "forgottenPassword",
        "parameters": [
          {
            "description": "login by new password and update password",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.ForgottenPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "user login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "login",
        "operationId": "userLogin",
        "parameters": [
          {
            "description": "user login",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "description": "user register",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "register",
        "operationId": "userRegister",
        "parameters": [
          {
            "description": "user register",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/reset_password": {
      "post": {
        "description": "reset password after login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "reset password",
        "operationId": "resetPassword",
        "parameters": [
          {
            "description": "user reset password",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/send_code": {
      "post": {
        "description": "send verify code or uri",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "invite notify",
        "operationId": "inviteNotify",
        "parameters": [
          {
            "description": "send verify code",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.SendCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/visibility_settings": {
      "get": {
        "description": "get visibilitySetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["visibilitySetting"],
        "summary": "getVisibilitySetting",
        "operationId": "getVisibilitySetting",
        "parameters": [
          {
            "type": "string",
            "description": "content type",
            "name": "content_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.VisibilitySetting"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/visibility_settings/{id}": {
      "get": {
        "description": "get visibilitySetting by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["visibilitySetting"],
        "summary": "getVisibilitySettingByID",
        "operationId": "getVisibilitySettingByID",
        "parameters": [
          {
            "type": "string",
            "description": "visibilitySetting id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.VisibilitySetting"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "api.BadRequestResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.BulkBindOutcomeSetRequest": {
      "type": "object",
      "properties": {
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "set_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.CheckAccountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "api.ConflictResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.CreateContentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.CreateFolderResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.DownloadPathResource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "api.FolderItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItemInfo"
          }
        }
      }
    },
    "api.FolderItemsResponseWithTotal": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItemInfo"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "api.ForbiddenResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.ForgottenPasswordRequest": {
      "type": "object",
      "properties": {
        "auth_code": {
          "type": "string"
        },
        "auth_to": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "api.HasPermissionRequest": {
      "type": "object",
      "properties": {
        "permission_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.HasPermissionResponse": {
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      }
    },
    "api.IDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.LoginRequest": {
      "type": "object",
      "properties": {
        "auth_code": {
          "type": "string"
        },
        "auth_to": {
          "type": "string"
        },
        "auth_type": {
          "type": "string"
        }
      }
    },
    "api.LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "api.NotFoundResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.OrganizationRegionInfoResponse": {
      "type": "object",
      "properties": {
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.RegionOrganizationInfo"
          }
        }
      }
    },
    "api.PublishContentRequest": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.PullOutcomeSetResponse": {
      "type": "object",
      "properties": {
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        }
      }
    },
    "api.RegisterRequest": {
      "type": "object",
      "properties": {
        "account": {
          "description": "phone number for now 当前是电话号码",
          "type": "string"
        },
        "act_type": {
          "description": "register manner 注册类型",
          "type": "string"
        },
        "auth_code": {
          "description": "verification code 验证码",
          "type": "string"
        },
        "password": {
          "description": "password 密码",
          "type": "string"
        }
      }
    },
    "api.RejectReasonBulkRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        }
      }
    },
    "api.RejectReasonRequest": {
      "type": "object",
      "properties": {
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        }
      }
    },
    "api.ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "new_password": {
          "type": "string"
        },
        "old_password": {
          "type": "string"
        }
      }
    },
    "api.SendCodeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        }
      }
    },
    "api.ShortcodeRequest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "api.ShortcodeResponse": {
      "type": "object",
      "properties": {
        "shortcode": {
          "type": "string"
        }
      }
    },
    "api.SignatureResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "api.SuccessRequestResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.TokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "api.UnAuthorizedResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.contentBulkOperateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.AppInsightMessageResponse": {
      "type": "object",
      "properties": {
        "assignment_label_id": {
          "type": "string"
        },
        "assignment_label_params": {
          "$ref": "#/definitions/entity.AssignmentLabelParams"
        },
        "attedance_label_id": {
          "type": "string"
        },
        "attedance_label_params": {
          "$ref": "#/definitions/entity.AttedanceLabelParams"
        },
        "learning_outcome_achivement_label_id": {
          "type": "string"
        },
        "learning_outcome_achivement_label_params": {
          "$ref": "#/definitions/entity.LearningOutcomeAchivementLabelParams"
        }
      }
    },
    "entity.AssignmentCompletionRate": {
      "type": "object",
      "properties": {
        "class_designated_subject": {
          "type": "number"
        },
        "duration": {
          "type": "string"
        },
        "student_complete_assignment": {
          "type": "integer"
        },
        "student_designated_subject": {
          "type": "number"
        },
        "student_id": {
          "type": "string"
        },
        "student_non_designated_subject": {
          "type": "number"
        },
        "student_total_assignment": {
          "type": "integer"
        }
      }
    },
    "entity.AssignmentLabelParams": {
      "type": "object",
      "properties": {
        "assign_compare_3_week": {
          "type": "number"
        },
        "assign_compare_class": {
          "type": "number"
        },
        "assign_compare_class_3_week": {
          "type": "number"
        },
        "assign_compare_last_week": {
          "type": "number"
        },
        "assign_complete_count": {
          "type": "integer"
        },
        "assignment_complete_count": {
          "type": "integer"
        },
        "assignment_count": {
          "type": "integer"
        }
      }
    },
    "entity.AssignmentRequest": {
      "type": "object",
      "required": ["class_id", "student_id"],
      "properties": {
        "class_id": {
          "type": "string"
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        },
        "un_selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.AssignmentResponse": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssignmentCompletionRate"
          }
        },
        "label_id": {
          "type": "string"
        },
        "label_params": {
          "$ref": "#/definitions/entity.AssignmentLabelParams"
        }
      }
    },
    "entity.AssignmentsSummaryItem": {
      "type": "object",
      "properties": {
        "assessment_id": {
          "type": "string"
        },
        "assessment_title": {
          "type": "string"
        },
        "assessment_type": {
          "type": "string",
          "enum": ["class", "live", "study", "home_fun_study"]
        },
        "complete_at": {
          "description": "for sorting",
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "lesson_plan_name": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LearningSummaryOutcome"
          }
        },
        "schedule_id": {
          "description": "for debug",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["in_progress", "complete"]
        },
        "teacher_feedback": {
          "type": "string"
        }
      }
    },
    "entity.AssignmentsSummaryItemV2": {
      "type": "object",
      "properties": {
        "assessment_id": {
          "type": "string"
        },
        "assessment_title": {
          "type": "string"
        },
        "assessment_type": {
          "type": "string",
          "enum": ["class", "live", "study", "home_fun_study"]
        },
        "complete_at": {
          "description": "for sorting",
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "lesson_plan_name": {
          "type": "string"
        },
        "schedule_id": {
          "description": "for debug",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["in_progress", "complete"]
        },
        "teacher_feedback": {
          "type": "string"
        }
      }
    },
    "entity.AttedanceLabelParams": {
      "type": "object",
      "properties": {
        "attend_compare_last_3_week": {
          "type": "number"
        },
        "attend_compare_last_week": {
          "type": "number"
        },
        "attended_count": {
          "type": "integer"
        },
        "lo_compare_class": {
          "type": "number"
        },
        "lo_compare_class_3_week": {
          "type": "number"
        },
        "scheduled_count": {
          "type": "integer"
        }
      }
    },
    "entity.CheckScheduleReviewDataRequest": {
      "type": "object",
      "properties": {
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "program_id": {
          "type": "string"
        },
        "student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_zone_offset": {
          "type": "integer"
        }
      }
    },
    "entity.CheckScheduleReviewDataResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.CheckScheduleReviewDataResult"
          }
        }
      }
    },
    "entity.CheckScheduleReviewDataResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "entity.ClassAttendanceRequest": {
      "type": "object",
      "required": ["class_id", "student_id"],
      "properties": {
        "class_id": {
          "type": "string"
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        },
        "un_selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ClassAttendanceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ClassAttendanceResponseItem"
          }
        },
        "label_id": {
          "type": "string"
        },
        "label_params": {
          "$ref": "#/definitions/entity.AttedanceLabelParams"
        },
        "request_student_id": {
          "type": "string"
        }
      }
    },
    "entity.ClassAttendanceResponseItem": {
      "type": "object",
      "properties": {
        "attendance_percentage": {
          "type": "number"
        },
        "attended_count": {
          "type": "integer"
        },
        "class_average_attendance_percentage": {
          "type": "number"
        },
        "duration": {
          "type": "string"
        },
        "scheduled_count": {
          "type": "integer"
        },
        "un_selected_subjects_average_attendance_percentage": {
          "type": "number"
        }
      }
    },
    "entity.ClassEventBody": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "entity.ClassUsage": {
      "type": "object",
      "properties": {
        "content_usage_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ContentUsage"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "entity.ClassesAssignmentOverView": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "ratio": {
          "type": "number"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ClassesAssignmentOverViewRequest": {
      "type": "object",
      "properties": {
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ClassesAssignmentsDurationRatio": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "ratio": {
          "type": "number"
        }
      }
    },
    "entity.ClassesAssignmentsUnattendedStudentsView": {
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/entity.ScheduleView"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "description": "fill by frontend",
          "type": "string"
        },
        "time": {
          "type": "integer"
        }
      }
    },
    "entity.ClassesAssignmentsUnattendedViewRequest": {
      "type": "object",
      "properties": {
        "classID": {
          "type": "string"
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ClassesAssignmentsView": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string"
        },
        "durations_ratio": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ClassesAssignmentsDurationRatio"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ClassesAssignmentsViewRequest": {
      "type": "object",
      "properties": {
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ContentConditionRequest": {
      "type": "object",
      "properties": {
        "age_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authed_org_ids": {
          "$ref": "#/definitions/entity.NullStrings"
        },
        "author": {
          "type": "string"
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content_ids": {
          "$ref": "#/definitions/entity.NullStrings"
        },
        "content_name": {
          "type": "string"
        },
        "content_type": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "data_source_id": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "grade_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "join_user_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lesson_plan_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "pager": {
          "$ref": "#/definitions/utils.Pager"
        },
        "parent_id": {
          "type": "string"
        },
        "parents_path": {
          "$ref": "#/definitions/entity.NullStrings"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "published_query_mode": {
          "type": "string"
        },
        "source_type": {
          "type": "string"
        },
        "sub_category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "visibility_settings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ContentInfoWithDetails": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "age_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "creator_name": {
          "description": "AuthorName string `json:\"author_name\"`",
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developmental_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draw_activity": {
          "type": "boolean"
        },
        "extra": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grade_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "is_mine": {
          "type": "boolean"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latest_id": {
          "type": "string"
        },
        "lesson_type": {
          "type": "string"
        },
        "lesson_type_name": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "org_name": {
          "type": "string"
        },
        "outcome_entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Outcome"
          }
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permission": {
          "$ref": "#/definitions/entity.ContentPermission"
        },
        "program": {
          "type": "string"
        },
        "program_name": {
          "type": "string"
        },
        "publish_scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_scope_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        },
        "self_study": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skills_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_id": {
          "type": "string"
        },
        "source_type": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suggest_time": {
          "type": "integer"
        },
        "teacher_manual_batch": {
          "description": "TeacherManual     []string `json:\"teacher_manual\"`\nName []string `json:\"teacher_manual_name\"`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TeacherManualFile"
          }
        },
        "thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ContentPermission": {
      "type": "object",
      "properties": {
        "allow_approve": {
          "type": "boolean"
        },
        "allow_delete": {
          "type": "boolean"
        },
        "allow_edit": {
          "type": "boolean"
        },
        "allow_reject": {
          "type": "boolean"
        },
        "allow_republish": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "entity.ContentSimplified": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "string"
        },
        "content_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "data": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        }
      }
    },
    "entity.ContentSimplifiedList": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ContentSimplified"
          }
        },
        "student_content_map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleStudentContent"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ContentStatisticsInfo": {
      "type": "object",
      "properties": {
        "outcomes_count": {
          "type": "integer"
        },
        "subcontent_count": {
          "type": "integer"
        }
      }
    },
    "entity.ContentUsage": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "time_range": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.CreateContentRequest": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content_type": {
          "type": "integer"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draw_activity": {
          "type": "boolean"
        },
        "extra": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lesson_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_folder": {
          "type": "string"
        },
        "program": {
          "type": "string"
        },
        "publish_scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "self_study": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_type": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suggest_time": {
          "type": "integer"
        },
        "teacher_manual_batch": {
          "description": "TeacherManual     string `json:\"teacher_manual\"`\nName string `json:\"teacher_manual_name\"`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TeacherManualFile"
          }
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.CreateFolderRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_id": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.ExportOutcomeRequest": {
      "type": "object",
      "properties": {
        "is_locked": {
          "type": "boolean"
        },
        "outcome_ids": {
          "description": "Maximum array length is 50",
          "type": "array",
          "maxItems": 50,
          "items": {
            "type": "string"
          }
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        }
      }
    },
    "entity.ExportOutcomeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ExportOutcomeView"
          }
        },
        "total_count": {
          "type": "integer"
        }
      }
    },
    "entity.ExportOutcomeView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assumed": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "milestones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "score_threshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "subcategory": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.FeedbackAssignmentView": {
      "type": "object",
      "properties": {
        "attachment_id": {
          "type": "string"
        },
        "attachment_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "review_attachment_id": {
          "type": "string"
        }
      }
    },
    "entity.FolderContentData": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "create_at": {
          "type": "integer"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items_count": {
          "type": "integer"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "$ref": "#/definitions/entity.ContentPermission"
        },
        "publish_status": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "entity.FolderContentInfoWithDetailsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderContentData"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.FolderIdWithFileType": {
      "type": "object",
      "properties": {
        "folder_file_type": {
          "type": "string",
          "enum": ["content", "folder"]
        },
        "id": {
          "type": "string"
        }
      }
    },
    "entity.FolderItemInfo": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "creator_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "editor_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "item_type": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItemInfo"
          }
        },
        "items_count": {
          "type": "integer"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_id": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "entity.FolderShareRecord": {
      "type": "object",
      "properties": {
        "folder_id": {
          "type": "string"
        },
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.OrganizationInfo"
          }
        }
      }
    },
    "entity.FolderShareRecords": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderShareRecord"
          }
        }
      }
    },
    "entity.GetLessonPlansCanScheduleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LessonPlanForSchedule"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.GetStudentPerformanceReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentPerformanceReportItem"
          }
        }
      }
    },
    "entity.IDName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.JwtToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "entity.LearnOutcomeAchievementRequest": {
      "type": "object",
      "required": ["class_id", "student_id"],
      "properties": {
        "class_id": {
          "type": "string"
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        },
        "un_selected_subject_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.LearnOutcomeAchievementResponse": {
      "type": "object",
      "properties": {
        "class_average_achieved_count": {
          "type": "number"
        },
        "first_achieved_count": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LearnOutcomeAchievementResponseItem"
          }
        },
        "label_id": {
          "type": "string"
        },
        "label_params": {
          "$ref": "#/definitions/entity.LearningOutcomeAchivementLabelParams"
        },
        "re_achieved_count": {
          "type": "integer"
        },
        "request": {
          "$ref": "#/definitions/entity.LearnOutcomeAchievementRequest"
        },
        "un_selected_subjects_average_achieve_count": {
          "type": "number"
        }
      }
    },
    "entity.LearnOutcomeAchievementResponseItem": {
      "type": "object",
      "properties": {
        "class_average_achieved_percentage": {
          "type": "number"
        },
        "duration": {
          "type": "string"
        },
        "first_achieved_count": {
          "type": "integer"
        },
        "first_achieved_percentage": {
          "type": "number"
        },
        "re_achieved_count": {
          "type": "integer"
        },
        "re_achieved_percentage": {
          "type": "number"
        },
        "un_achieved_count": {
          "type": "integer"
        },
        "un_selected_subjects_average_achieved_percentage": {
          "type": "number"
        }
      }
    },
    "entity.LearnerReportOverview": {
      "type": "object",
      "properties": {
        "attendees": {
          "type": "integer"
        },
        "num_above": {
          "description": "num of above student",
          "type": "integer"
        },
        "num_below": {
          "description": "num of below student",
          "type": "integer"
        },
        "num_meet": {
          "description": "num of meet student",
          "type": "integer"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "entity.LearnerUsageRequest": {
      "type": "object",
      "properties": {
        "content_type_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "durations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.LearnerUsageResponse": {
      "type": "object",
      "properties": {
        "assignment_scheduled": {
          "type": "integer"
        },
        "class_scheduled": {
          "type": "integer"
        },
        "contents_used": {
          "type": "integer"
        }
      }
    },
    "entity.LearningOutcomeAchivementLabelParams": {
      "type": "object",
      "properties": {
        "achieved_lo_count": {
          "type": "integer"
        },
        "learnt_lo_count": {
          "type": "integer"
        },
        "lo_compare_class": {
          "type": "number"
        },
        "lo_compare_class_3_week": {
          "type": "number"
        },
        "lo_compare_last_3_week": {
          "type": "number"
        },
        "lo_compare_last_week": {
          "type": "number"
        },
        "lo_review_compare_class": {
          "type": "number"
        }
      }
    },
    "entity.LearningSummaryFilterWeek": {
      "type": "object",
      "properties": {
        "week_end": {
          "type": "integer"
        },
        "week_start": {
          "type": "integer"
        }
      }
    },
    "entity.LearningSummaryFilterYear": {
      "type": "object",
      "properties": {
        "weeks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LearningSummaryFilterWeek"
          }
        },
        "year": {
          "type": "integer"
        }
      }
    },
    "entity.LearningSummaryOutcome": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["achieved", "not_achieved", "partially"]
        }
      }
    },
    "entity.LessonPlanForSchedule": {
      "type": "object",
      "properties": {
        "group_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.LessonType": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.ListStudentsPerformanceReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentsPerformanceReportItem"
          }
        }
      }
    },
    "entity.LiveClassSummaryItem": {
      "type": "object",
      "properties": {
        "absent": {
          "type": "boolean"
        },
        "assessment_id": {
          "type": "string"
        },
        "class_start_time": {
          "type": "integer"
        },
        "complete_at": {
          "description": "for sorting",
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "lesson_plan_name": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LearningSummaryOutcome"
          }
        },
        "schedule_id": {
          "description": "for debug",
          "type": "string"
        },
        "schedule_title": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["in_progress", "complete"]
        },
        "teacher_feedback": {
          "type": "string"
        }
      }
    },
    "entity.LiveClassSummaryItemV2": {
      "type": "object",
      "properties": {
        "absent": {
          "type": "boolean"
        },
        "assessment_id": {
          "type": "string"
        },
        "class_start_time": {
          "type": "integer"
        },
        "complete_at": {
          "description": "for sorting",
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "lesson_plan_name": {
          "type": "string"
        },
        "schedule_id": {
          "description": "for debug",
          "type": "string"
        },
        "schedule_title": {
          "type": "string"
        },
        "teacher_feedback": {
          "type": "string"
        }
      }
    },
    "entity.LiveTokenView": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "entity.Milestone": {
      "type": "object",
      "properties": {
        "ages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "author_id": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "integer"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "grades": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latest_id": {
          "type": "string"
        },
        "lo_counts": {
          "type": "integer"
        },
        "locked_by": {
          "type": "string"
        },
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Outcome"
          }
        },
        "programs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "shortcode_num": {
          "type": "integer"
        },
        "source_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "entity.MoveFolderIDBulkRequest": {
      "type": "object",
      "properties": {
        "dist": {
          "type": "string"
        },
        "folder_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderIdWithFileType"
          }
        },
        "owner_type": {
          "type": "integer"
        },
        "partition": {
          "type": "string"
        }
      }
    },
    "entity.MoveFolderRequest": {
      "type": "object",
      "properties": {
        "dist": {
          "type": "string"
        },
        "folder_file_type": {
          "type": "string",
          "enum": ["content", "folder"]
        },
        "id": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "partition": {
          "type": "string"
        }
      }
    },
    "entity.NullStrings": {
      "type": "object",
      "properties": {
        "strings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "entity.OrganizationInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.OrganizationProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "region": {
          "type": "string",
          "enum": ["global", "vn"]
        },
        "type": {
          "type": "string",
          "enum": ["normal", "headquarters"]
        }
      }
    },
    "entity.Outcome": {
      "type": "object",
      "properties": {
        "ages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created_at": {
          "type": "integer"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "extra": {
          "type": "integer"
        },
        "grades": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "string"
        },
        "latest_id": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Milestone"
          }
        },
        "organization_id": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "programs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "scoreThreshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Set"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "shortcode_cum": {
          "type": "integer"
        },
        "source_id": {
          "type": "string"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.OutcomeCondition": {
      "type": "object",
      "properties": {
        "age_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assumed": {
          "type": "integer"
        },
        "author_name": {
          "type": "string"
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "grade_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "is_locked": {
          "type": "boolean"
        },
        "keywords": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "search_key": {
          "type": "string"
        },
        "set_name": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "sub_category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.QueryAssignmentsSummaryResult": {
      "type": "object",
      "properties": {
        "home_fun_study_count": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssignmentsSummaryItem"
          }
        },
        "study_count": {
          "type": "integer"
        }
      }
    },
    "entity.QueryAssignmentsSummaryResultV2": {
      "type": "object",
      "properties": {
        "home_fun_study_count": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssignmentsSummaryItemV2"
          }
        },
        "study_count": {
          "type": "integer"
        }
      }
    },
    "entity.QueryContentItem": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "$ref": "#/definitions/entity.ContentPermission"
        },
        "publish_status": {
          "type": "string"
        },
        "suggest_time": {
          "type": "integer"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.QueryContentResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.QueryContentItem"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.QueryLiveClassesSummaryResult": {
      "type": "object",
      "properties": {
        "attend": {
          "type": "number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LiveClassSummaryItem"
          }
        }
      }
    },
    "entity.QueryLiveClassesSummaryResultV2": {
      "type": "object",
      "properties": {
        "attend": {
          "type": "number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.LiveClassSummaryItemV2"
          }
        }
      }
    },
    "entity.QuerySharedContentV2Item": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "dir_path": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.QuerySharedContentV2Response": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.QuerySharedContentV2Item"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.RegionOrganizationInfo": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        }
      }
    },
    "entity.RemoveItemBulk": {
      "type": "object",
      "properties": {
        "folder_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.RepeatDaily": {
      "type": "object",
      "properties": {
        "end": {
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        }
      }
    },
    "entity.RepeatEnd": {
      "type": "object",
      "properties": {
        "after_count": {
          "type": "integer"
        },
        "after_time": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": ["never", "after_count", "after_time"]
        }
      }
    },
    "entity.RepeatMonthly": {
      "type": "object",
      "properties": {
        "end": {
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on_date_day": {
          "type": "integer"
        },
        "on_type": {
          "type": "string",
          "enum": ["date", "week"]
        },
        "on_week": {
          "type": "string",
          "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        },
        "on_week_seq": {
          "type": "string",
          "enum": ["first", "second", "third", "fourth", "last"]
        }
      }
    },
    "entity.RepeatOptions": {
      "type": "object",
      "properties": {
        "daily": {
          "$ref": "#/definitions/entity.RepeatDaily"
        },
        "monthly": {
          "$ref": "#/definitions/entity.RepeatMonthly"
        },
        "type": {
          "type": "string",
          "enum": ["daily", "weekly", "monthly", "yearly"]
        },
        "weekly": {
          "$ref": "#/definitions/entity.RepeatWeekly"
        },
        "yearly": {
          "$ref": "#/definitions/entity.RepeatYearly"
        }
      }
    },
    "entity.RepeatWeekly": {
      "type": "object",
      "properties": {
        "end": {
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
          }
        }
      }
    },
    "entity.RepeatYearly": {
      "type": "object",
      "properties": {
        "end": {
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on_date_day": {
          "type": "integer"
        },
        "on_date_month": {
          "type": "integer"
        },
        "on_type": {
          "type": "string",
          "enum": ["date", "week"]
        },
        "on_week": {
          "type": "string",
          "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        },
        "on_week_month": {
          "type": "integer"
        },
        "on_week_seq": {
          "type": "string",
          "enum": ["first", "second", "third", "fourth", "last"]
        }
      }
    },
    "entity.ReportListTeachingLoadArgs": {
      "type": "object",
      "properties": {
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_offset": {
          "type": "integer"
        }
      }
    },
    "entity.ReportListTeachingLoadDuration": {
      "type": "object",
      "properties": {
        "end_at": {
          "type": "integer"
        },
        "offline": {
          "type": "integer"
        },
        "online": {
          "type": "integer"
        },
        "start_at": {
          "type": "integer"
        }
      }
    },
    "entity.ReportListTeachingLoadItem": {
      "type": "object",
      "properties": {
        "durations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ReportListTeachingLoadDuration"
          }
        },
        "teacher_id": {
          "type": "string"
        },
        "teacher_name": {
          "type": "string"
        }
      }
    },
    "entity.ReportListTeachingLoadResult": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ReportListTeachingLoadItem"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleAccessibleUserView": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleAddView": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_id": {
          "type": "string"
        },
        "class_roster_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_roster_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_force": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program_id": {
          "type": "string"
        },
        "repeat": {
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "start_at": {
          "type": "integer"
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleAttendance": {
      "type": "object",
      "properties": {
        "number_of_students": {
          "type": "integer"
        },
        "number_of_teachers": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleDetailsView": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class": {
          "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
        },
        "class_roster_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "class_roster_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "class_type_label": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "complete_assessment": {
          "type": "boolean"
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "exist_assessment": {
          "type": "boolean"
        },
        "exist_feedback": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan": {
          "$ref": "#/definitions/entity.ScheduleLessonPlan"
        },
        "org_id": {
          "type": "string"
        },
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "participants_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "program": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "real_time_status": {
          "$ref": "#/definitions/entity.ScheduleRealTimeView"
        },
        "repeat": {
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "review_status": {
          "type": "string",
          "enum": ["pending", "success", "failed"]
        },
        "role_type": {
          "type": "string",
          "enum": ["Student", "Teacher", "Unknown"]
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleFeedbackAddInput": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FeedbackAssignmentView"
          }
        },
        "comment": {
          "type": "string"
        },
        "schedule_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleFeedbackView": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FeedbackAssignmentView"
          }
        },
        "comment": {
          "type": "string"
        },
        "create_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_allow_submit": {
          "type": "boolean"
        },
        "schedule_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleLessonPlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "is_auth": {
          "type": "boolean"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleLessonPlanMaterial"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleLessonPlanMaterial": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleListView": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string"
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "class_type_label": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "complete_assessment": {
          "type": "boolean"
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "exist_assessment": {
          "type": "boolean"
        },
        "exist_feedback": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "review_status": {
          "type": "string"
        },
        "role_type": {
          "type": "string"
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.SchedulePageView": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleSearchView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleRealTimeView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lesson_plan_is_auth": {
          "type": "boolean"
        }
      }
    },
    "entity.ScheduleRelationIDs": {
      "type": "object",
      "properties": {
        "class_roster_class_id": {
          "type": "string"
        },
        "class_roster_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_roster_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org_id": {
          "type": "string"
        },
        "participant_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participant_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ScheduleReviewFailedResult": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleReviewSucceededResult": {
      "type": "object",
      "properties": {
        "content_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleSearchView": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "lesson_plan": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "member_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "program": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "start_at": {
          "type": "integer"
        },
        "student_count": {
          "type": "integer"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleShortInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleSimplified": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleSimplifiedPageView": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleSimplified"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleStudentContent": {
      "type": "object",
      "properties": {
        "content_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleTimeView": {
      "type": "object",
      "properties": {
        "assessment_status": {
          "description": "Accurate for Home Fun Study and student user only, in_progress: submitted, complete: completed, empty string: never submitted",
          "type": "string",
          "enum": ["in_progress", "complete"]
        },
        "class_id": {
          "type": "string"
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "created_at": {
          "type": "integer"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "exist_feedback": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_locked_lesson_plan": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "review_status": {
          "type": "string",
          "enum": ["pending", "success", "failed"]
        },
        "role_type": {
          "type": "string",
          "enum": ["Student", "Teacher", "Unknown"]
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleTimeViewListRequest": {
      "type": "object",
      "properties": {
        "anytime": {
          "type": "boolean"
        },
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "due_at_eq": {
          "type": "integer"
        },
        "end_at_le": {
          "type": "integer"
        },
        "order_by": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer",
          "maximum": 1000,
          "minimum": -1
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "school_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start_at_ge": {
          "type": "integer"
        },
        "study_types": {
          "description": "indicates query different types of Study",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["normal", "homefun", "review"]
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_at": {
          "type": "integer"
        },
        "time_boundary": {
          "description": "apply to StartAtGe and EndAtLe, union will include schedules that are only partially within the specified time frame, intersect will not",
          "type": "string",
          "default": "intersect",
          "enum": ["intersect", "union"]
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view_type": {
          "type": "string"
        },
        "with_assessment_status": {
          "type": "boolean"
        }
      }
    },
    "entity.ScheduleTimeViewListResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleTimeView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleTimeViewQuery": {
      "type": "object",
      "properties": {
        "anytime": {
          "type": "boolean"
        },
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "end_at_le": {
          "type": "integer"
        },
        "order_by": {
          "type": "string"
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "school_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "start_at_ge": {
          "type": "integer"
        },
        "study_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_at": {
          "type": "integer"
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view_type": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleUpdateView": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_id": {
          "type": "string"
        },
        "class_roster_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_roster_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_force": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program_id": {
          "type": "string"
        },
        "repeat": {
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "repeat_edit_options": {
          "type": "string",
          "enum": ["only_current", "with_following"]
        },
        "start_at": {
          "type": "integer"
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleView": {
      "type": "object",
      "properties": {
        "schedule_id": {
          "type": "string"
        },
        "schedule_name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleViewDetail": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_id": {
          "type": "string"
        },
        "class_type": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_type_label": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "complete_assessment": {
          "type": "boolean"
        },
        "content_end_at": {
          "type": "integer"
        },
        "content_start_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "exist_assessment": {
          "type": "boolean"
        },
        "exist_feedback": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_home_fun": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "is_review": {
          "type": "boolean"
        },
        "lesson_plan": {
          "$ref": "#/definitions/entity.ScheduleLessonPlan"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "personalized_review_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "program": {
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "random_review_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "review_status": {
          "type": "string",
          "enum": ["pending", "success", "failed"]
        },
        "role_type": {
          "type": "string",
          "enum": ["Student", "Teacher", "Unknown"]
        },
        "room_id": {
          "type": "string"
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.Set": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "deleted_at": {
          "type": "integer"
        },
        "organization_id": {
          "type": "string"
        },
        "set_id": {
          "type": "string"
        },
        "set_name": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "entity.ShareFoldersRequest": {
      "type": "object",
      "properties": {
        "folder_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.StudentAchievementReportCategoryItem": {
      "type": "object",
      "properties": {
        "achieved_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "not_achieved_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "not_attempted_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.StudentAchievementReportItem": {
      "type": "object",
      "properties": {
        "achieved_count": {
          "type": "integer"
        },
        "attend": {
          "type": "boolean"
        },
        "not_achieved_count": {
          "type": "integer"
        },
        "not_attempted_count": {
          "type": "integer"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentAchievementReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentAchievementReportCategoryItem"
          }
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentPerformanceReportItem": {
      "type": "object",
      "properties": {
        "achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "not_achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "not_attempted_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "schedule_id": {
          "type": "string"
        },
        "schedule_start_time": {
          "type": "integer"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentUsageMaterialReportRequest": {
      "type": "object",
      "properties": {
        "class_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content_type_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_range_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.StudentUsageMaterialReportResponse": {
      "type": "object",
      "properties": {
        "class_usage_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ClassUsage"
          }
        },
        "request": {
          "$ref": "#/definitions/entity.StudentUsageMaterialReportRequest"
        }
      }
    },
    "entity.StudentUsageMaterialViewCountReportRequest": {
      "type": "object",
      "properties": {
        "class_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content_type_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "time_range_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.StudentUsageMaterialViewCountReportResponse": {
      "type": "object",
      "properties": {
        "content_usage_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ContentUsage"
          }
        },
        "request": {
          "$ref": "#/definitions/entity.StudentUsageMaterialViewCountReportRequest"
        }
      }
    },
    "entity.StudentUsageRegistration": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer"
        },
        "no_create": {
          "type": "integer"
        },
        "registered": {
          "type": "integer"
        }
      }
    },
    "entity.StudentsAchievementOverviewReportResponse": {
      "type": "object",
      "properties": {
        "achieved_above_count": {
          "type": "integer"
        },
        "achieved_below_count": {
          "type": "integer"
        },
        "achieved_meet_count": {
          "type": "integer"
        },
        "covered_learn_outcome_count": {
          "type": "integer"
        }
      }
    },
    "entity.StudentsAchievementReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentAchievementReportItem"
          }
        }
      }
    },
    "entity.StudentsPerformanceReportItem": {
      "type": "object",
      "properties": {
        "achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "not_achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "not_attempted_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.SummaryNode": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        }
      }
    },
    "entity.TeacherLoadAssignmentRequest": {
      "type": "object",
      "properties": {
        "class_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_type_list": {
          "description": "one of study, home_fun",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "type": "string"
        },
        "teacher_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.TeacherLoadAssignmentResponseItem": {
      "type": "object",
      "properties": {
        "avg_days_of_pending_assignment": {
          "type": "number"
        },
        "count_of_classes": {
          "type": "integer"
        },
        "count_of_completed_assignment": {
          "type": "integer"
        },
        "count_of_pending_assignment": {
          "type": "integer"
        },
        "count_of_scheduled_assignment": {
          "type": "integer"
        },
        "count_of_students": {
          "type": "integer"
        },
        "feedback_percentage": {
          "type": "number"
        },
        "teacher_id": {
          "type": "string"
        },
        "teacher_name": {
          "description": "TeacherName just used by font-end: generate swagger json --\u003e generate typescript class",
          "type": "string"
        }
      }
    },
    "entity.TeacherLoadLesson": {
      "type": "object",
      "properties": {
        "completed_in_class_lessons": {
          "type": "integer"
        },
        "completed_live_Lessons": {
          "type": "integer"
        },
        "missed_in_class_lessons": {
          "type": "integer"
        },
        "missed_live_lessons": {
          "type": "integer"
        },
        "number_of_classes": {
          "type": "integer"
        },
        "number_of_students": {
          "type": "integer"
        },
        "teacher_id": {
          "type": "string"
        },
        "total_scheduled": {
          "type": "integer"
        }
      }
    },
    "entity.TeacherLoadLessonRequest": {
      "type": "object",
      "properties": {
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "type": "string"
        },
        "teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.TeacherLoadLessonSummary": {
      "type": "object",
      "properties": {
        "completed_in_class_lessons": {
          "$ref": "#/definitions/entity.SummaryNode"
        },
        "completed_live_lessons": {
          "$ref": "#/definitions/entity.SummaryNode"
        },
        "missed_in_class_lessons": {
          "$ref": "#/definitions/entity.SummaryNode"
        },
        "missed_live_lessons": {
          "$ref": "#/definitions/entity.SummaryNode"
        }
      }
    },
    "entity.TeacherLoadMissedLesson": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string"
        },
        "class_type": {
          "type": "string"
        },
        "end_date": {
          "type": "integer"
        },
        "no_of_student": {
          "type": "integer"
        },
        "start_date": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.TeacherLoadMissedLessonsRequest": {
      "type": "object",
      "required": ["class_ids", "duration", "page", "page_size", "teacher_id"],
      "properties": {
        "class_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "type": "string"
        },
        "page": {
          "type": "integer"
        },
        "page_size": {
          "type": "integer"
        },
        "teacher_id": {
          "type": "string"
        }
      }
    },
    "entity.TeacherLoadMissedLessonsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TeacherLoadMissedLesson"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.TeacherLoadOverview": {
      "type": "object",
      "properties": {
        "num_of_missed_lessons": {
          "type": "integer"
        },
        "num_of_teachers_completed_all": {
          "type": "integer"
        },
        "num_of_teachers_missed_frequently": {
          "type": "integer"
        },
        "num_of_teachers_missed_some": {
          "type": "integer"
        }
      }
    },
    "entity.TeacherManualFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.TeacherReport": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TeacherReportCategory"
          }
        }
      }
    },
    "entity.TeacherReportCategory": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.TreeResponse": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TreeResponse"
          }
        },
        "dir_path": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "item_count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.UpdateFolderRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.UpdateScheduleReviewStatusRequest": {
      "type": "object",
      "properties": {
        "failed_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleReviewFailedResult"
          }
        },
        "personalized_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleReviewSucceededResult"
          }
        },
        "schedule_id": {
          "type": "string"
        },
        "standard_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleReviewSucceededResult"
          }
        }
      }
    },
    "entity.UserSettingJsonContent": {
      "type": "object",
      "required": ["cms_page_size"],
      "properties": {
        "cms_page_size": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "entity.VisibilitySetting": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "external.Age": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "external.Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "external.Grade": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "external.Program": {
      "type": "object",
      "properties": {
        "group_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "external.SubCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "external.Subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      }
    },
    "model.Age": {
      "type": "object",
      "properties": {
        "age_id": {
          "type": "string"
        },
        "age_name": {
          "type": "string"
        }
      }
    },
    "model.AuthorView": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        }
      }
    },
    "model.Category": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "string"
        },
        "category_name": {
          "type": "string"
        }
      }
    },
    "model.CreateMilestoneView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Age"
          }
        },
        "age_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/model.AuthorView"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Category"
          }
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "create_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Grade"
          }
        },
        "grade_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last_edited_at": {
          "type": "integer"
        },
        "last_edited_by": {
          "type": "string"
        },
        "latest_id": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "locked_location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/model.OrganizationView"
        },
        "outcome_ancestor_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outcome_count": {
          "type": "integer"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeView"
          }
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "source_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sub_category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.SubCategory"
          }
        },
        "subcategory_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Subject"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        },
        "with_publish": {
          "type": "boolean"
        }
      }
    },
    "model.Developmental": {
      "type": "object",
      "properties": {
        "developmental_id": {
          "type": "string"
        },
        "developmental_name": {
          "type": "string"
        }
      }
    },
    "model.Grade": {
      "type": "object",
      "properties": {
        "grade_id": {
          "type": "string"
        },
        "grade_name": {
          "type": "string"
        }
      }
    },
    "model.Milestone": {
      "type": "object",
      "properties": {
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        }
      }
    },
    "model.MilestoneBulkRejectRequest": {
      "type": "object",
      "properties": {
        "milestone_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "string"
        }
      }
    },
    "model.MilestoneDetailView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Age"
          }
        },
        "author": {
          "$ref": "#/definitions/model.AuthorView"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Category"
          }
        },
        "create_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Grade"
          }
        },
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/model.OrganizationView"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.MilestoneOutcomeView"
          }
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sub_category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.SubCategory"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Subject"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "model.MilestoneList": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "model.MilestoneOutcomeView": {
      "type": "object",
      "properties": {
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "developmental": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Developmental"
          }
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        },
        "shortcode": {
          "type": "string"
        }
      }
    },
    "model.MilestoneView": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/model.AuthorView"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Category"
          }
        },
        "create_at": {
          "type": "integer"
        },
        "last_edited_at": {
          "type": "integer"
        },
        "last_edited_by": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "locked_location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        },
        "outcome_count": {
          "type": "integer"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "model.OrganizationView": {
      "type": "object",
      "properties": {
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        }
      }
    },
    "model.OutcomeBulkRejectRequest": {
      "type": "object",
      "properties": {
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "string"
        }
      }
    },
    "model.OutcomeCreateResponse": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_time": {
          "type": "integer"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked_by": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_id": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "model.OutcomeCreateView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assumed": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_time": {
          "type": "integer"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_id": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "score_threshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "model.OutcomeDetailView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Age"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Developmental"
          }
        },
        "grade": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Grade"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "last_edited_at": {
          "type": "integer"
        },
        "last_edited_by": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "locked_location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Milestone"
          }
        },
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "score_threshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Skill"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Subject"
          }
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "model.OutcomeIDList": {
      "type": "object",
      "properties": {
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "model.OutcomeRejectReq": {
      "type": "object",
      "properties": {
        "reject_reason": {
          "type": "string"
        }
      }
    },
    "model.OutcomeSetCreateView": {
      "type": "object",
      "properties": {
        "set_id": {
          "type": "string"
        },
        "set_name": {
          "type": "string"
        }
      }
    },
    "model.OutcomeView": {
      "type": "object",
      "properties": {
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "developmental": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Developmental"
          }
        },
        "last_edited_at": {
          "type": "integer"
        },
        "last_edited_by": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "locked_location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "publish_status": {
          "type": "string"
        },
        "score_threshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "model.Program": {
      "type": "object",
      "properties": {
        "program_id": {
          "type": "string"
        },
        "program_name": {
          "type": "string"
        }
      }
    },
    "model.PublishOutcomeReq": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        }
      }
    },
    "model.PublishedOutcomeView": {
      "type": "object",
      "properties": {
        "age_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assumed": {
          "type": "boolean"
        },
        "category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grade_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "score_threshold": {
          "type": "number"
        },
        "sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeSetCreateView"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "sub_category_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "model.SearchMilestoneResponse": {
      "type": "object",
      "properties": {
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.SearchMilestoneView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "model.SearchMilestoneView": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/model.AuthorView"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Category"
          }
        },
        "create_at": {
          "type": "integer"
        },
        "last_edited_at": {
          "type": "integer"
        },
        "last_edited_by": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "locked_location": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "milestone_id": {
          "type": "string"
        },
        "milestone_name": {
          "type": "string"
        },
        "outcome_count": {
          "type": "integer"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.Program"
          }
        },
        "shortcode": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "model.SearchOutcomeResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.OutcomeView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "model.SearchPublishedOutcomeResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/model.PublishedOutcomeView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "model.Skill": {
      "type": "object",
      "properties": {
        "skill_id": {
          "type": "string"
        },
        "skill_name": {
          "type": "string"
        }
      }
    },
    "model.SubCategory": {
      "type": "object",
      "properties": {
        "sub_category_id": {
          "type": "string"
        },
        "sub_category_name": {
          "type": "string"
        }
      }
    },
    "model.Subject": {
      "type": "object",
      "properties": {
        "subject_id": {
          "type": "string"
        },
        "subject_name": {
          "type": "string"
        }
      }
    },
    "utils.Pager": {
      "type": "object",
      "properties": {
        "pageIndex": {
          "type": "integer"
        },
        "pageSize": {
          "type": "integer"
        }
      }
    },
    "v2.AssessmentContentReply": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "string"
        },
        "content_name": {
          "type": "string"
        },
        "content_subtype": {
          "type": "string"
        },
        "content_type": {
          "type": "string",
          "enum": ["LessonPlan", "LessonMaterial", "Unknown"]
        },
        "file_type": {
          "type": "string",
          "enum": ["Unknown", "HasChildContainer", "NotChildContainer", "SupportScoreStandAlone", "NotSupportScoreStandAlone"]
        },
        "h5p_id": {
          "type": "string"
        },
        "h5p_sub_id": {
          "type": "string"
        },
        "max_score": {
          "type": "number"
        },
        "number": {
          "type": "string"
        },
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_id": {
          "type": "string"
        },
        "reviewer_comment": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["Covered", "NotCovered"]
        }
      }
    },
    "v2.AssessmentDetailReply": {
      "type": "object",
      "properties": {
        "assessment_type": {
          "type": "string"
        },
        "class": {
          "$ref": "#/definitions/entity.IDName"
        },
        "class_end_at": {
          "type": "integer"
        },
        "class_length": {
          "type": "integer"
        },
        "complete_at": {
          "type": "integer"
        },
        "complete_rate": {
          "type": "number"
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentContentReply"
          }
        },
        "description": {
          "type": "string"
        },
        "diff_content_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentDiffContentStudentsReply"
          }
        },
        "id": {
          "type": "string"
        },
        "is_anyone_attempted": {
          "type": "boolean"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentOutcomeReply"
          }
        },
        "program": {
          "$ref": "#/definitions/entity.IDName"
        },
        "remaining_time": {
          "type": "integer"
        },
        "room_id": {
          "type": "string"
        },
        "schedule_due_at": {
          "type": "integer"
        },
        "schedule_title": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentReply"
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.IDName"
          }
        },
        "teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentDiffContentReply": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "string"
        },
        "content_name": {
          "type": "string"
        },
        "content_subtype": {
          "type": "string"
        },
        "content_type": {
          "type": "string",
          "enum": ["LessonPlan", "LessonMaterial", "Unknown"]
        },
        "file_type": {
          "type": "string",
          "enum": ["Unknown", "HasChildContainer", "NotChildContainer", "SupportScoreStandAlone", "NotSupportScoreStandAlone"]
        },
        "h5p_id": {
          "type": "string"
        },
        "h5p_sub_id": {
          "type": "string"
        },
        "max_score": {
          "type": "number"
        },
        "number": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentDiffContentStudentsReply": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.DiffContentStudentResultReply"
          }
        },
        "reviewer_comment": {
          "type": "string"
        },
        "status": {
          "description": "StudentName     string                           `json:\"student_name\"`",
          "type": "string",
          "enum": ["Participate", "NotParticipate"]
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentItemForHomePage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.IDName"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentOutcomeReply": {
      "type": "object",
      "properties": {
        "assigned_to": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["LessonPlan", "LessonMaterial"]
          }
        },
        "assumed": {
          "type": "boolean"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "score_threshold": {
          "type": "number"
        }
      }
    },
    "v2.AssessmentPageReply": {
      "type": "object",
      "properties": {
        "assessments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentQueryReply"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "v2.AssessmentQueryReply": {
      "type": "object",
      "properties": {
        "assessment_type": {
          "type": "string"
        },
        "class_end_at": {
          "type": "integer"
        },
        "class_info": {
          "description": "OnlineStudy,ReviewStudy",
          "$ref": "#/definitions/entity.IDName"
        },
        "complete_at": {
          "description": "onlineClass,offlineClass,OnlineStudy",
          "type": "integer"
        },
        "complete_rate": {
          "type": "number"
        },
        "due_at": {
          "type": "integer"
        },
        "id": {
          "description": "all type",
          "type": "string"
        },
        "lesson_plan": {
          "description": "onlineClass,offlineClass,OnlineStudy",
          "$ref": "#/definitions/entity.IDName"
        },
        "program": {
          "description": "onlineClass,offlineClass",
          "$ref": "#/definitions/entity.IDName"
        },
        "remaining_time": {
          "description": "OnlineStudy",
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.IDName"
          }
        },
        "teachers": {
          "description": "onlineClass,offlineClass,OnlineStudy,ReviewStudy",
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.IDName"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentStudentReply": {
      "type": "object",
      "properties": {
        "process_status": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentResultReply"
          }
        },
        "reviewer_comment": {
          "type": "string"
        },
        "status": {
          "description": "StudentName     string                          `json:\"student_name\"`",
          "type": "string",
          "enum": ["Participate", "NotParticipate"]
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentStudentResultOutcomeReply": {
      "type": "object",
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["Unknown", "NotCovered", "NotAchieved", "Achieved"]
        }
      }
    },
    "v2.AssessmentStudentResultOutcomeReq": {
      "type": "object",
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["Unknown", "NotCovered", "NotAchieved", "Achieved"]
        }
      }
    },
    "v2.AssessmentStudentResultReply": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string"
        },
        "assess_score": {
          "type": "integer",
          "enum": [1, 2, 3, 4, 5]
        },
        "attempted": {
          "type": "boolean"
        },
        "content_id": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentResultOutcomeReply"
          }
        },
        "score": {
          "type": "number"
        },
        "student_feed_backs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.StudentResultFeedBacksReply"
          }
        }
      }
    },
    "v2.AssessmentStudentResultReq": {
      "type": "object",
      "properties": {
        "assess_feedback_id": {
          "type": "string"
        },
        "assess_score": {
          "type": "integer",
          "enum": [1, 2, 3, 4, 5]
        },
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.FeedbackAssignmentsReq"
          }
        },
        "content_id": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentResultOutcomeReq"
          }
        },
        "parent_id": {
          "type": "string"
        },
        "score": {
          "type": "number"
        }
      }
    },
    "v2.AssessmentStudentUpdateReq": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentResultReq"
          }
        },
        "reviewer_comment": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["Participate", "NotParticipate"]
        },
        "student_id": {
          "type": "string"
        }
      }
    },
    "v2.AssessmentUpdateContentReq": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "reviewer_comment": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["Covered", "NotCovered"]
        }
      }
    },
    "v2.AssessmentUpdateReq": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["Draft", "Complete"]
        },
        "contents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentUpdateContentReq"
          }
        },
        "id": {
          "type": "string"
        },
        "students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentStudentUpdateReq"
          }
        }
      }
    },
    "v2.AssessmentsSummary": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "integer"
        },
        "in_progress": {
          "type": "integer"
        }
      }
    },
    "v2.DiffContentStudentResultReply": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string"
        },
        "attempted": {
          "type": "boolean"
        },
        "content": {
          "$ref": "#/definitions/v2.AssessmentDiffContentReply"
        },
        "score": {
          "type": "number"
        }
      }
    },
    "v2.FeedbackAssignmentsReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "review_attachment_id": {
          "type": "string"
        }
      }
    },
    "v2.ListAssessmentsResultForHomePage": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.AssessmentItemForHomePage"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "v2.ScheduleEndClassCallBackReq": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["EnterLiveRoom", "LeaveLiveRoom"]
        },
        "attendance_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_end_time": {
          "type": "integer"
        },
        "class_length": {
          "type": "integer"
        },
        "schedule_id": {
          "type": "string"
        }
      }
    },
    "v2.ScheduleEndClassCallBackResp": {
      "type": "object",
      "properties": {
        "schedule_id": {
          "type": "string"
        }
      }
    },
    "v2.SearchStudentAssessmentsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.StudentAssessment"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "v2.StudentAssessment": {
      "type": "object",
      "properties": {
        "complete_at": {
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "done_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "in_progress_at": {
          "type": "integer"
        },
        "resubmitted_at": {
          "type": "integer"
        },
        "schedule": {
          "$ref": "#/definitions/v2.StudentAssessmentSchedule"
        },
        "score": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStarted", "InProgress", "Done", "Resubmitted", "Completed"]
        },
        "student_attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.StudentAssessmentAttachment"
          }
        },
        "teacher_comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2.StudentAssessmentTeacher"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["OfflineClass", "OnlineClass", "OnlineStudy", "OfflineStudy", "ReviewStudy"]
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "v2.StudentAssessmentAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "review_attachment_id": {
          "type": "string"
        }
      }
    },
    "v2.StudentAssessmentSchedule": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#/definitions/v2.StudentScheduleAttachment"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework"]
        }
      }
    },
    "v2.StudentAssessmentTeacher": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "teacher": {
          "$ref": "#/definitions/v2.StudentAssessmentTeacherInfo"
        }
      }
    },
    "v2.StudentAssessmentTeacherInfo": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "family_name": {
          "type": "string"
        },
        "given_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "v2.StudentResultFeedBacksReply": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FeedbackAssignmentView"
          }
        },
        "comment": {
          "type": "string"
        },
        "create_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "schedule_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "v2.StudentScheduleAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
